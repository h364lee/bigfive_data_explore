--- 
title: "Group Coparion in R without Sampling, using the full dataset"
author: "Caleb Lee"
format: html
execute: 
    echo: true
---
# Work Notebook
```{r}
# Import libraries
library(tidyverse)
library(broom)
bigfive <- read_csv('./data/cleaned/cleaned_bigfive_v1.csv')
```
```{r}
# filtering for NA and NONE
bigfive_filtered <- bigfive %>%
    filter(!is.na(country) & country != 'NONE')

# seeing which countries are present
bigfive_filtered %>%
    count(country, sort = TRUE) %>%
    print (n = Inf)
```

```{r}
# created a CSV file summarizing the name, row count, geographical and cultural location of all 220 countries present (after filtered for NA and NONE)
# note: other - antarctica 
country_info <- read_csv('./data/cleaned/country_names_220.csv')

# show unique continents
country_info %>%
  count(continent, sort = TRUE)

# Show unique cultural groups
country_info %>%
  count(cultural_group, sort = TRUE)

# Sum total row_count by CONTINENT
country_info %>%
  group_by(continent) %>%
  summarize(
    n_countries = n(),
    total_row_count = sum(row_count, na.rm = TRUE)
  ) %>%
  arrange(desc(total_row_count))

# Sum total row_count by CULTURAL GROUP
country_info %>%
  group_by(cultural_group) %>%
  summarize(
    n_countries = n(),
    total_row_count = sum(row_count, na.rm = TRUE)
  ) %>%
  arrange(desc(total_row_count))

```
```{r}
# merging country info 
bigfive_merged <- bigfive_filtered %>%
  left_join(country_info, by = c('country' = 'country_code'))

summary(bigfive_merged$continent)
summary(bigfive_merged$cultural_group)
```
```{r}
# Continent-level ANOVA
# filter Other (Antarctica) for low N
bigfive_merged <- bigfive_merged %>%
  filter (continent != 'Other')
bigfive_merged %>%
  count(continent, sort = TRUE)

# ANOVA for Openness by Continent
anova_O <- aov(Openness ~ continent, data = bigfive_merged)
summary(anova_O)

# post-hoc Tukey HSD
tukey_O <- TukeyHSD(anova_O)
tukey_O

# Visualization
bigfive_merged %>%
  group_by(continent) %>%
  mutate(mean_O = mean(Openness)) %>%
  ggplot(aes(x = continent, y = Openness)) +
  geom_boxplot(fill = 'lightblue') +
  stat_summary(fun = mean, geom = 'point', shape = 20, size = 3, color = 'red') +
  labs(title = 'Openness by Continent', y = 'Openness Score (1-5)', x = 'Continent') +
  theme_minimal()
```
```{r}
traits <- c('Openness', 'Conscientiousness', 'Extraversion', 'Agreeableness', 'Neuroticism')

anova_results <- list()
tukey_results <- list()

for (trait in traits) {
  formula <- as.formula(paste(trait, '~ continent'))

  model <- aov(formula, data = bigfive_merged)
  anova_results[[trait]] <- summary(model)

  tukey <- TukeyHSD(model)
  tukey_results[[trait]] <- tukey
}

anova_results[['Openness']]
tukey_results[['Openness']]

anova_results[['Conscientiousness']]
tukey_results[['Conscientiousness']]

anova_results[['Extraversion']]
tukey_results[['Extraversion']]

anova_results[['Agreeableness']]
tukey_results[['Agreeableness']]

anova_results[['Neuroticism']]
tukey_results[['Neuroticism']]

```
```{r}
# Loop through each trait and plot
for (trait in traits) {
  p <- ggplot(bigfive_merged, 
              aes(x = continent, y = .data[[trait]], fill = continent)) +
    geom_violin(alpha = 0.7, trim = FALSE, bw = 0.3) +
    geom_boxplot(width = 0.1, fill = "white", outlier.shape = NA) +
    labs(title = paste("Distribution of", trait, "by Continent"),
         x = "Continent", y = trait) +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
    scale_fill_brewer(palette = "Set2")
  
  print(p)
}
```

# Final Continent-level and Cultrual Group-level Analyses 
```{r}
library(tidyverse)
library(broom)

# Load data
bigfive <- read_csv('./data/cleaned/cleaned_bigfive_v1.csv')
country_info <- read_csv('./data/cleaned/country_names_220.csv')

# Merge country info, filter out "Other" (Antarctica)
bigfive_merged <- bigfive %>%
  filter(!is.na(country) & country != 'NONE') %>%
  left_join(country_info, by = c('country' = 'country_code')) %>%
  filter(continent != "Other")

traits <- c('Openness', 'Conscientiousness', 'Extraversion', 'Agreeableness', 'Neuroticism')
anova_results_continent <- list()
tukey_results_continent <- list()

for (trait in traits) {
  formula <- as.formula(paste(trait, "~ continent"))
  model <- aov(formula, data = bigfive_merged)
  anova_results_continent[[trait]] <- summary(model)
  tukey_results_continent[[trait]] <- TukeyHSD(model)
}

# Example output
anova_results_continent[['Openness']]
tukey_results_continent[['Openness']]
```
```{r}
for (trait in traits) {
  p <- ggplot(bigfive_merged, 
              aes(x = continent, y = .data[[trait]], fill = continent)) +
    geom_violin(trim = FALSE, alpha = 0.7, bw = 0.3) +
    geom_boxplot(width = 0.1, fill = "white", outlier.shape = NA) +
    labs(title = paste("Distribution of", trait, "by Continent"),
         x = "Continent", y = trait) +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
    scale_fill_brewer(palette = "Set2")
  
  print(p)
}
```
```{r}
# Filter cultural groups with valid labels (optional)
bigfive_cultural <- bigfive_merged %>%
  filter(!is.na(cultural_group))

anova_results_cultural <- list()
tukey_results_cultural <- list()

for (trait in traits) {
  formula <- as.formula(paste(trait, "~ cultural_group"))
  model <- aov(formula, data = bigfive_cultural)
  anova_results_cultural[[trait]] <- summary(model)
  tukey_results_cultural[[trait]] <- TukeyHSD(model)
}

# Example output
anova_results_cultural[['Openness']]
tukey_results_cultural[['Openness']]
```
```{r}
for (trait in traits) {
  p <- ggplot(bigfive_cultural, 
              aes(x = cultural_group, y = .data[[trait]], fill = cultural_group)) +
    geom_violin(trim = FALSE, alpha = 0.7, bw = 0.3) +
    geom_boxplot(width = 0.1, fill = "white", outlier.shape = NA) +
    labs(title = paste("Distribution of", trait, "by Cultural Group"),
         x = "Cultural Group", y = trait) +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 9)) +
    scale_fill_manual(values = rep_len(RColorBrewer::brewer.pal(8, "Set3"), 
                                       length(unique(bigfive_cultural$cultural_group))))
  
  print(p)
}
```